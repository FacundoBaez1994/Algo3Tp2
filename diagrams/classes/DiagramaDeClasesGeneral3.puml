@startuml
'Una moto atraviesa la grilla sin obstÃ¡culos y la cantidad de movimientos es X
class Vehiculo {
   ' - Posicion posicion;
   ' - TipoDeVehiculo unTipoDeVehiculo;
    - int cantidadDeMovimientos;
    +  moverseHacia (Direccion unaDireccion): void
    + afectarMovimientos(Obstaculo unObstaculo): void
    + getCantidadDeMovimientos (): int
}
'Vehiculo"1" ..>  "1" Obstaculo

class Jugador {
    + moverVehiculoHacia (unaDireccion): void
}

'class PuntajesAltos{
'-ListaDeJugadores
'}

class Grilla

Abstract class Calle{
    '# Posicion esquinaDeUnLado
    '# Posicion esquinaDelotroLado
    + {abstract} obtenerEsquinaOpuesta (Posicion esquinaOrigen) :Posicion
    + {abstract} serTransitada (Vehiculo unVehiculo) : Posicion
}
'Calle "1" ..>  "1" Vehiculo

interface Movimiento {
+ {abstract} mover(Calle unaCalle, Vehiculo unVehiculo ) : Posicion
}

abstract class Posicion {
    # int coordenadaX;
    # int coordenadaY;
  '  # ArrayList Calle unasCalles
    + {abstract} setearCalleEnDireccion (Calle calle, Direccion unaDireccion) : void
    + {abstract} obtenerCalleEnDireccion (Direccion unaDireccion) :  Calle
}
Posicion "1" -> "1..*" Calle
'Posicion "1" ..>  "1" Direccion


abstract class TipoDeVehiculo {
    + {abstract} calcularPenalizacion (Obstaculo unObstaculo): int
    + {abstract} proximoTipoDeVehiculo (): TipoDeVehiculo
}
'TipoDeVehiculo"1" ..>  "1" Obstaculo

interface Direccion

interface Obstaculo {
   + {abstract} equals (Obstaculo unObstaculo): boolean
 }

class Juego
Juego "1" -> "*" Jugador
'Juego "1" *-- "*" PuntajesAltos



interface Sorpresa{
 + {abstract} serEncontradaPor (Vehiculo unVehiculo) : void
}

Calle "1" -r-> "2" Posicion


Calle "1" o-- "*" Sorpresa
Calle "1" o-- "*" Obstaculo
Vehiculo "1" --> "1" Posicion
Grilla  "1" -> "*" Posicion
Grilla  "1" -> "*" Calle
Juego "1" -> "1" Grilla
Jugador "1" o-- "1" Vehiculo
'Vehiculo "1" ..>  "1" Movimiento
'Vehiculo "1" ..>  "1" Direccion
Movimiento "1" -> "1"Direccion
'Movimiento "1" ..> "1"Calle
Vehiculo "1" -> "1"TipoDeVehiculo
'Sorpresa "1" ..> "1"Vehiculo




@endu
--------------------------------------------------
@startuml
'https://plantuml.com/sequence-diagram

autonumber

":TestCase" -> ":Vehiculo": MoverHacia(derecha: DirDerecha)
":Vehiculo" -> "derecha:DirDerecha":

@enduml
qqv-duno-sdf