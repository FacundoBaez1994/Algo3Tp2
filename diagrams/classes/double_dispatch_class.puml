@startuml
top to bottom direction
interface Obstaculo{
    + eAtravesadoPor(:Vehiculo)
}

class Pozo{
    + esAtravesadoPor(:Vehiculo)
}

class Piquete{
    + esAtravesadoPor(:Vehiculo)
}

class Policia{
    + esAtravesadoPor(:Vehiculo)
}

class SFavorable{
    + esAtravesadoPor(:Vehiculo)
}

class SNoFavorable{
    + esAtravesadoPor(:Vehiculo)
}

class SCambio{
    + esAtravesadoPor(:Vehiculo)
}

Pozo    ...up.|> Obstaculo
Piquete ..up.|> Obstaculo
Policia ..up.|> Obstaculo

SFavorable      ...up.|> Obstaculo
SNoFavorable    ..up.|> Obstaculo
SCambio         ..up.|> Obstaculo

note right of Pozo::esAtravesadoPor
esAtravesadoPor(unV: Vehiculo) {
    return unV.seEncuentraunPozo()
}
end note

note right of SCambio::esAtravesadoPor
esAtravesadoPor(unV: Vehiculo) {
    unV.proximoVehiculo()
    return 1
}
end note

note right of SFavorable::esAtravesadoPor
esAtravesadoPor(unV: Vehiculo) {
    unV.aumentarMovimientosEn(25);
    return 1
}
end note


@enduml
